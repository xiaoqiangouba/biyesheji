<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ls.Comments.dao.CommentsMapper" >
  <resultMap id="BaseResultMap" type="com.ls.Comments.pojo.Comments" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="comments_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="userName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="greatnumber" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="context" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>


  <!-- 联合查询评论和房间 -->
  <resultMap id="withCommentsAndRoom" type="com.ls.Comments.pojo.Comments" >

    <id column="comments_id" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="userName" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    <result column="greatnumber" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="context" jdbcType="VARCHAR" javaType="java.lang.String" />

    <association property="room" javaType="com.ls.Room.pojo.Room">

      <id column="room_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="floor" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="price" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="introduce" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="path" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="comments_id" jdbcType="VARCHAR" javaType="java.lang.String" />

    </association>
  </resultMap>


  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, comments_id, userName, time, greatnumber, state, context
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ls.Comments.pojo.CommentsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_comments
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_comments
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_comments
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ls.Comments.pojo.CommentsExample" >
    delete from tb_comments
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ls.Comments.pojo.Comments" >
    insert into tb_comments (id, comments_id, userName, 
      time, greatnumber, state, 
      context)
    values (#{id,jdbcType=INTEGER}, #{commentsId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{greatnumber,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, 
      #{context,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ls.Comments.pojo.Comments" >
    insert into tb_comments
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="commentsId != null" >
        comments_id,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="greatnumber != null" >
        greatnumber,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="context != null" >
        context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commentsId != null" >
        #{commentsId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="greatnumber != null" >
        #{greatnumber,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="context != null" >
        #{context,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <!--查询房间和评论-->
  <sql id="Base_ColumnWithRoom_List" >
    a.comments_id, a.userName, a.time, a.greatnumber, a.state,a.context,a.id
  </sql>
  <select id="selectByExampleWithRoom" resultMap="BaseResultMap"  >
    select
    <include refid="Base_ColumnWithRoom_List" />
    from tb_comments as a
    left join tb_room as b on a.comments_id=b.room_id
    where b.room_id= #{roomId,jdbcType=VARCHAR}
    order by a.time desc
  </select>

  <!--根据id查询状态selectStateBykey-->
  <sql id="Base_state_List" >
  a.comments_id, a.userName, a.time, a.greatnumber, a.state,a.context,a.id
  </sql>
  <select id="selectStateBykey" resultMap="BaseResultMap"  >
    select
    <include refid="Base_state_List" />
    from tb_comments as a
    left join tb_give as b on a.id=b.id
    where b.id=#{0} and b.userName=#{1}
  </select>


  <select id="countByExample" parameterType="com.ls.Comments.pojo.CommentsExample" resultType="java.lang.Integer" >
    select count(*) from tb_comments
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_comments
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.commentsId != null" >
        comments_id = #{record.commentsId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.greatnumber != null" >
        greatnumber = #{record.greatnumber,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.context != null" >
        context = #{record.context,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_comments
    set id = #{record.id,jdbcType=INTEGER},
      comments_id = #{record.commentsId,jdbcType=VARCHAR},
      userName = #{record.username,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      greatnumber = #{record.greatnumber,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      context = #{record.context,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ls.Comments.pojo.Comments" >
    update tb_comments
    <set >
      <if test="commentsId != null" >
        comments_id = #{commentsId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="greatnumber != null" >
        greatnumber = #{greatnumber,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="context != null" >
        context = #{context,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--根据id增加个数updateByKey-->

  <update id="updateByKey" parameterType="com.ls.Comments.pojo.Comments" >
    update tb_comments
    set
    greatnumber = greatnumber+1,
    state=1
    where id = #{id,jdbcType=INTEGER}
  </update>



  <update id="updateByPrimaryKey" parameterType="com.ls.Comments.pojo.Comments" >
    update tb_comments
    set comments_id = #{commentsId,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      greatnumber = #{greatnumber,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      context = #{context,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>